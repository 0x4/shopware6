# requires /.gitlab/base.yml

Danger:
    extends: .base-no-setup
    stage: lint
    image:
        name: ghcr.io/shyim/danger-php:latest
        entrypoint: ["/bin/sh", "-c"]
    tags:
        - t3.nano
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    before_script: []
    script:
        - danger ci

ESLint (Administration):
    extends: .base-no-setup
    stage: lint
    image: node:lts-alpine
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'src/Administration/Resources/app/administration/**/*'
    script:
        - cd src/Administration/Resources/app/administration
        - npm clean-install
        - npm run lint -- --format junit --output-file $CI_PROJECT_DIR/eslint.junit.xml
        - npm run lint:types
    after_script:
        - grep 'failure message' eslint.junit.xml
    artifacts:
        when: on_failure
        paths:
            - eslint.junit.xml
        reports:
            junit: eslint.junit.xml

ESLint (Storefront):
    extends: .base-no-setup
    stage: lint
    image: node:lts-alpine
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'src/Storefront/Resources/app/storefront/**/*'
    script:
        - cd src/Storefront/Resources/app/storefront
        - npm clean-install
        - npm run --silent lint:js -- --format junit --output-file $CI_PROJECT_DIR/eslint.junit.xml
    after_script:
        - grep 'failure message' eslint.junit.xml
    artifacts:
        when: on_failure
        paths:
            - eslint.junit.xml
        reports:
            junit: eslint.junit.xml

Stylelint (Administration):
    extends: .base-no-setup
    stage: lint
    image: node:lts-alpine
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'src/Administration/Resources/app/administration/.stylelintrc'
              - 'src/Administration/Resources/app/administration/**/*.scss'
    script:
        - cd src/Administration/Resources/app/administration
        - npm clean-install
        - npm run lint:scss -- --custom-formatter 'node_modules/stylelint-junit-formatter' --output-file stylelint.junit.xml
    artifacts:
        reports:
            junit: src/Administration/Resources/app/administration/stylelint.junit.xml

Stylelint (Storefront):
    extends: .base-no-setup
    stage: lint
    image: node:lts-alpine
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - 'src/Storefront/Resources/app/storefront/stylelint.config.js'
              - 'src/Storefront/Resources/app/storefront/**/*.scss'
    script:
        - cd src/Storefront/Resources/app/storefront
        - npm clean-install
        - npm run lint:scss -- --custom-formatter 'node_modules/stylelint-junit-formatter' --output-file stylelint.junit.xml
    artifacts:
        reports:
            junit: src/Storefront/Resources/app/storefront/stylelint.junit.xml

PHP analysis:
    extends: .base-no-setup
    variables:
        GIT_DEPTH: 0
        FEATURE_ALL: "major" # execute all destructive migrations
    stage: lint
    image: shopware/development:7.4-composer-2
    services:
        -   name: mariadb:10.4
            alias: database
            entrypoint: [ "sh", "-c", "docker-entrypoint.sh $MYSQL_CMD" ]
    rules:
        - !reference [.rules, skip]
        - !reference [.rules, run]
        - changes:
              - phpstan.neon.dist
              - composer.json
              - phpstan-baseline.neon
              - .bc-exclude.php
              - 'changelog/**/*.md'
              - 'src/**/snippet/**/*.json'
              - '**/*.php'
    before_script:
        - composer install --quiet --no-interaction
        - composer run init:db
    script:
        - composer run ecs -- src --no-progress-bar
        - composer run phpstan -- --error-format=gitlab --no-progress | tee phpstan-report.json
        - composer run lint:changelog
        - composer run lint:snippets
        - composer run bc-check
    artifacts:
        reports:
            codequality: phpstan-report.json

NPM CI:
    extends: .base-no-setup
    stage: lint
    image: node:$NODE_IMAGE_TAG
    rules:
        - !reference [ .rules, skip ]
        - !reference [ .rules, run ]
        - changes:
            - 'src/Administration/Resources/app/administration/package*.json'
            - 'src/Storefront/Resources/app/storefront/package*.json'
    before_script: []
    script:
        - cd $JS_APP_DIR
        - npm ci
    parallel:
      matrix:
        - JS_APP_DIR: "src/Administration/Resources/app/administration/"
          NODE_IMAGE_TAG:
          - "lts-alpine"
          - "12-alpine"
          - "14-alpine"
          - "16-alpine"
        - JS_APP_DIR: "src/Storefront/Resources/app/storefront/"
          NODE_IMAGE_TAG:
            - "lts-alpine"
            - "12-alpine"
            - "14-alpine"
            - "16-alpine"

rufus:
  stage: lint
  image: curlimages/curl:7.72.0
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
    - when: manual
      allow_failure: true
  script:
    - RUFUS_BRANCH=trunk
    - PLATFORM_BRANCH="${CI_COMMIT_BRANCH}${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}"
    - |
      if [[ $CI_COMMIT_BRANCH = 6.* ]]; then
        RUFUS_BRANCH=$CI_COMMIT_BRANCH
      fi
    - curl --request POST
      --form "token=$CI_JOB_TOKEN"
      --form "variables[PLATFORM_BRANCH]=${PLATFORM_BRANCH}"
      --form "ref=${RUFUS_BRANCH}"
      "${CI_API_V4_URL}/projects/221/trigger/pipeline"
