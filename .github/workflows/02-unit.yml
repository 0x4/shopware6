name: Unit

on:
    push:
        branches:
            - trunk
    pull_request:

jobs:
  php:
    name: "PHPUnit with PHP ${{ matrix.php-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.1", "8.2"]
    env:
      TEST_SUITES: 'administration storefront checkout content framework profiling migration system elasticsearch unit integration migration-tests'
      APP_ENV: test
      DATABASE_URL: mysql://root:root@database:3306/root
      APP_URL: http://localhost:8000
      APP_SECRET: devsecret
      SHOPWARE_ES_HOSTS: elasticsearch:9200
      BLUE_GREEN_DEPLOYMENT: 1
      PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'

    services:
      database:
        image: mysql:5.7
        env:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: root
      elasticsearch:
        image: elastic/elasticsearch:7.8.0
        env:
          discovery.type: single-node

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          fetch-depth: 0

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}

    - name: Setup Composer
      run: |
        composer install

    - name: Run PHPUnit
      if: matrix.php-version != '8.1'
      run: |
        for TEST_SUITE in $TEST_SUITES; do php -d memory_limit=-1 vendor/bin/phpunit --configuration phpunit.xml.dist --exclude-group "needsWebserver,quarantined" --testsuite "$TEST_SUITE"; done

    - name: Run PHPUnit with Pcov
      if: matrix.php-version == '8.1'
      run: |
        for TEST_SUITE in $TEST_SUITES; do php -d memory_limit=-1 -d pcov.enabled=1 -d pcov.directory=$PWD/src -d pcov.exclude='~(vendor|Test|node_modules)~' vendor/bin/phpunit --configuration phpunit.xml.dist --exclude-group "needsWebserver,quarantined"  --testsuite "$TEST_SUITE" --coverage-cobertura "phpunit.coverage.$TEST_SUITE.xml"; done

    - uses: codecov/codecov-action@v2
      if: matrix.php-version == '8.1'
      with:
        files: ./phpunit.coverage.administration.xml,./phpunit.coverage.storefront.xml,./phpunit.coverage.checkout.xml,./phpunit.coverage.content.xml,./phpunit.framework.administration.xml,./phpunit.coverage.profiling.xml,./phpunit.coverage.migration.xml,./phpunit.coverage.system.xml,./phpunit.coverage.elasticsearch.xml,./phpunit.coverage.docs.xml,./phpunit.coverage.unit.xml,./phpunit.coverage.integration.xml
  admin:
    runs-on: ubuntu-latest
    name: "Jest Admin"
    env:
      APP_ENV: prod
      DATABASE_URL: mysql://root:root@database:3306/root
      APP_URL: http://localhost:8000
      APP_SECRET: devsecret
      SHOPWARE_ES_HOSTS: elasticsearch:9200
      BLUE_GREEN_DEPLOYMENT: 1
    services:
      database:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: root
      elasticsearch:
        image: elasticsearch:7.8.0
        env:
          discovery.type: single-node

    steps:
      - name: Clone platform
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Run Jest Admin
        run: |
          bin/console framework:schema -s 'entity-schema' src/Administration/Resources/app/administration/test/_mocks_/entity-schema.json
          npm --prefix src/Administration/Resources/app/administration run unit -- --silent

  storefront:
    name: "Jest Storefront"
    runs-on: ubuntu-latest
    env:
      APP_ENV: prod
      DATABASE_URL: mysql://root:root@database:3306/root
      APP_URL: http://localhost:8000
      APP_SECRET: devsecret
      SHOPWARE_ES_HOSTS: elasticsearch:9200
      BLUE_GREEN_DEPLOYMENT: 1
    services:
      database:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: root
      elasticsearch:
        image: elasticsearch:7.8.0
        env:
          discovery.type: single-node

    steps:
      - name: Clone platform
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Run Jest Storefront
        run: |
          npm --prefix src/Storefront/Resources/app/storefront run unit -- --silent
