variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: "/certs"
    MYSQL_ROOT_PASSWORD: app
    WEB_DOCUMENT_ROOT: $CI_PROJECT_DIR/development/public
    GIT_STRATEGY: clone

stages:
    - unit

default:
    image: shopware/development:latest
    before_script:
        - apt-install jq
        - export CI_DEV_BRANCH=$(echo $CI_COMMIT_REF_NAME | cut -d'+' -f2-)
        - zip -rq platform.zip .
        - git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/6/product/development.git
        - unzip -q platform.zip -d development/platform/
        - cd development
        - git -C platform checkout master
        - git -C platform checkout $CI_COMMIT_SHA
        - >
            if [ "$(git ls-remote origin $CI_DEV_BRANCH | wc -l)" == 1 ]; then
              echo "Development Branch: $CI_DEV_BRANCH (explicit)";
              git checkout $CI_DEV_BRANCH;
            elif [ "$(git ls-remote origin $CI_COMMIT_REF_NAME | wc -l)" == 1 ]; then
              echo "Development Branch: $CI_COMMIT_REF_NAME (implicit by same branch name)";
              git checkout $CI_COMMIT_REF_NAME;
            else
              export CI_TARGET_BRANCH_NAME=$(curl -LsS -H "PRIVATE-TOKEN: $CI_GITLAB_API_TOKEN" "https://gitlab.shopware.com/api/v4/projects/$CI_PROJECT_ID/merge_requests?source_branch=$CI_COMMIT_REF_NAME" | jq --raw-output ".[0].target_branch");
              if [ "$(git ls-remote origin $CI_TARGET_BRANCH_NAME | wc -l)" == 1 ]; then
                echo "Development Branch: $CI_TARGET_BRANCH_NAME (implicit by merge request target branch)";
                git checkout $CI_TARGET_BRANCH_NAME;
              else
                echo "Development Branch: master (fallback)";
              fi
            fi
        - cp -v dev-ops/gitlab/.psh.yaml.override .
        - /entrypoint supervisord > /dev/null 2>&1 &
    interruptible: true

Javascript analysis:
    only:
        refs:
            - merge_requests
            - master
            - "6.1"
    stage: unit
    before_script: []
    script:
        - cd src/Administration/Resources
        - npm clean-install
        - npm run lerna -- bootstrap
        - cd app/administration
        - PROJECT_ROOT=$(pwd) node_modules/.bin/eslint --ext .js,.vue --format junit src test > eslint.junit.xml
    artifacts:
        reports:
            junit: src/Administration/Resources/app/administration/eslint.junit.xml
