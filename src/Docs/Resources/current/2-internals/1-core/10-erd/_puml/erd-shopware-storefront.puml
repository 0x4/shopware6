@startuml
' uncomment the line below if you're using computer with a retina display
' skinparam dpi 300
!define Table(name,desc) class name as "desc" << (T,#FFAAAA) >>
!define ForeignTable(name,desc) class name as "desc" << (T,#ada6a6) >>
!define TranslationTable(name,desc) class name as "desc" << (I,#4286f4) >>
' we use bold for primary key
' green color for unique
' and underscore for not_null
!define primary_key(x) <b>x</b>
!define unique(x) <color:green>x</color>
!define not_null(x) <u>x</u>
' other tags available:
' <i></i>
' <back:COLOR></color>, where color is a color name or html color code
' (#FFAACC)
' see: http://plantuml.com/classes.html#More
hide methods
hide stereotypes
hide empty members
skinparam backgroundColor #FFFFFF

' entities

Table(ShopwareStorefrontFrameworkSeoSeoUrlSeoUrlDefinition, "seo_url\n(Seo urls)") {
   primary_key(id) id
   salesChannelId foreignKey
   not_null(languageId) foreignKey
   not_null(foreignKey) id
   not_null(routeName) string
   not_null(pathInfo) string
   not_null(seoPathInfo) string
   isCanonical bool
   isModified bool
   isDeleted bool
   isValid bool
   url string
   autoIncrement int
   customFields customFields
   not_null(createdAt) createdAt
   not_null(updatedAt) updatedAt
}
Table(ShopwareStorefrontFrameworkSeoSeoUrlTemplateSeoUrlTemplateDefinition, "seo_url_template\n(Template)") {
   primary_key(id) id
   salesChannelId foreignKey
   not_null(entityName) string
   not_null(routeName) string
   not_null(template) string
   isValid bool
   customFields customFields
   not_null(createdAt) createdAt
   not_null(updatedAt) updatedAt
}
Table(ShopwareStorefrontThemeThemeDefinition, "theme\n(__EMPTY__)") {
   primary_key(id) id
   technicalName string
   not_null(name) string
   not_null(author) string
   description translated
   labels translated
   helpTexts translated
   customFields translated
   previewMediaId foreignKey
   parentThemeId foreignKey
   baseConfig json
   configValues json
   not_null(active) bool
   not_null(createdAt) createdAt
   not_null(updatedAt) updatedAt
   translated json
}
TranslationTable(ShopwareStorefrontThemeAggregateThemeTranslationDefinition, "theme_translation\n((Translations))") {
   description string
   labels json
   helpTexts json
   customFields customFields
   not_null(createdAt) createdAt
   not_null(updatedAt) updatedAt
   primary_key(themeId) foreignKey
   primary_key(languageId) foreignKey
}
Table(ShopwareStorefrontThemeAggregateThemeSalesChannelDefinition, "theme_sales_channel\n(M:N Mapping)") {
   primary_key(salesChannelId) foreignKey
   not_null(themeId) foreignKey
}
Table(ShopwareStorefrontThemeAggregateThemeMediaDefinition, "theme_media\n(M:N Mapping)") {
   primary_key(themeId) foreignKey
   primary_key(mediaId) foreignKey
}
ForeignTable(ShopwareCoreFrameworkLanguageLanguageDefinition, "language") {
}
ForeignTable(ShopwareCoreSystemSalesChannelSalesChannelDefinition, "sales_channel") {
}
ForeignTable(ShopwareCoreContentMediaMediaDefinition, "media") {
}

' relationshipd

ShopwareStorefrontFrameworkSeoSeoUrlSeoUrlDefinition --> ShopwareCoreFrameworkLanguageLanguageDefinition
ShopwareStorefrontFrameworkSeoSeoUrlSeoUrlDefinition --> ShopwareCoreSystemSalesChannelSalesChannelDefinition
ShopwareStorefrontFrameworkSeoSeoUrlTemplateSeoUrlTemplateDefinition --> ShopwareCoreSystemSalesChannelSalesChannelDefinition
ShopwareStorefrontThemeAggregateThemeTranslationDefinition --> ShopwareStorefrontThemeThemeDefinition
ShopwareStorefrontThemeAggregateThemeSalesChannelDefinition --> ShopwareStorefrontThemeThemeDefinition
ShopwareStorefrontThemeAggregateThemeMediaDefinition --> ShopwareStorefrontThemeThemeDefinition
ShopwareStorefrontThemeThemeDefinition --> ShopwareCoreContentMediaMediaDefinition
ShopwareStorefrontThemeThemeDefinition --> ShopwareStorefrontThemeThemeDefinition
ShopwareStorefrontThemeAggregateThemeTranslationDefinition --> ShopwareCoreFrameworkLanguageLanguageDefinition
ShopwareStorefrontThemeAggregateThemeSalesChannelDefinition --> ShopwareCoreSystemSalesChannelSalesChannelDefinition
ShopwareStorefrontThemeAggregateThemeMediaDefinition --> ShopwareCoreContentMediaMediaDefinition
@enduml
